import { Field, ObjectType } from '@nestjs/graphql';
import GraphQLJSON from 'graphql-type-json';

/**
 * {{{description}}}
 * @export
 * @class {{classname}}
 */
@ObjectType()
export class {{classname}} {{#parent}}extends {{{parent}}} {{/parent}}{
{{#additionalPropertiesType}}
    [key: string]: {{{additionalPropertiesType}}}{{#hasVars}} | any{{/hasVars}};

{{/additionalPropertiesType}}
{{#vars}}
    /**
     * {{{description}}}
     * @type {{=<% %>=}}{<%&datatype%>}<%={{ }}=%>
     * @memberof {{classname}}
    {{#deprecated}}
     * @deprecated
    {{/deprecated}}
     */
    
    {{^isPrimitiveType}}
        {{#isListContainer}}
    @Field(() => [{{{complexType}}}], { nullable: {{#required}}false{{/required}}{{^required}}true{{/required}} })
        {{/isListContainer}}
        {{^isListContainer}}
            {{^isMapContainer}}
    @Field(() => {{{dataType}}}, { nullable: {{#required}}false{{/required}}{{^required}}true{{/required}} })
            {{/isMapContainer}}
        {{/isListContainer}}
    {{/isPrimitiveType}}
    {{#isPrimitiveType}}
        {{^isContainer}}
    @Field({ nullable: {{#required}}false{{/required}}{{^required}}true{{/required}} })
        {{/isContainer}}
        {{#isContainer}}
    @Field(() => GraphQLJSON, { nullable: {{#required}}false{{/required}}{{^required}}true{{/required}} })
        {{/isContainer}}
    {{/isPrimitiveType}}
    {{name}}{{^required}}?{{/required}}: {{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{dataType}}}{{#isNullable}} | null{{/isNullable}}{{/isEnum}};
{{/vars}}
}{{#hasEnums}}

{{#vars}}
{{#isEnum}}
/**
    * @export
    * @enum {string}
    */
export enum {{enumName}} {
{{#allowableValues}}
    {{#enumVars}}
    {{#enumDescription}}
    /**
    * {{enumDescription}}
    */
    {{/enumDescription}}
    {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
    {{/enumVars}}
{{/allowableValues}}
}
{{/isEnum}}
{{/vars}}
{{/hasEnums}}
