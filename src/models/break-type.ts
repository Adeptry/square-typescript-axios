/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



import { Field, ObjectType } from '@nestjs/graphql';

/**
 * A defined break template that sets an expectation for possible `Break` instances on a `Shift`.
 * @export
 * @class BreakType
 */
@ObjectType()
export class BreakType {
    /**
     * UUID for this object.
     * @type {string}
     * @memberof BreakType
     */
    @Field() 
    id?: string;
    /**
     * The ID of the business location this type of break applies to.
     * @type {string}
     * @memberof BreakType
     */
    @Field() 
    location_id: string;
    /**
     * A human-readable name for this type of break. Will be displayed to employees in Square products.
     * @type {string}
     * @memberof BreakType
     */
    @Field() 
    break_name: string;
    /**
     * Format: RFC-3339 P[n]Y[n]M[n]DT[n]H[n]M[n]S. The expected length of this break. Precision below minutes is truncated.
     * @type {string}
     * @memberof BreakType
     */
    @Field() 
    expected_duration: string;
    /**
     * Whether this break counts towards time worked for compensation purposes.
     * @type {boolean}
     * @memberof BreakType
     */
    @Field() 
    is_paid: boolean;
    /**
     * Used for resolving concurrency issues; request will fail if version provided does not match server version at time of request. If a value is not provided, Square\'s servers execute a \"blind\" write; potentially overwriting another writer\'s data.
     * @type {number}
     * @memberof BreakType
     */
    @Field() 
    version?: number;
    /**
     * A read-only timestamp in RFC 3339 format.
     * @type {string}
     * @memberof BreakType
     */
    @Field() 
    created_at?: string;
    /**
     * A read-only timestamp in RFC 3339 format.
     * @type {string}
     * @memberof BreakType
     */
    @Field() 
    updated_at?: string;
}


