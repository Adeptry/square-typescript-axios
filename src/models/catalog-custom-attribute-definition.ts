/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { CatalogCustomAttributeDefinitionNumberConfig } from './catalog-custom-attribute-definition-number-config';
import { CatalogCustomAttributeDefinitionSelectionConfig } from './catalog-custom-attribute-definition-selection-config';
import { CatalogCustomAttributeDefinitionStringConfig } from './catalog-custom-attribute-definition-string-config';
import { SourceApplication } from './source-application';

import { Field, ObjectType } from '@nestjs/graphql';
import GraphQLJSON from 'graphql-type-json';

/**
 * Contains information defining a custom attribute. Custom attributes are intended to store additional information about a catalog object or to associate a catalog object with an entity in another system. Do not use custom attributes to store any sensitive information (personally identifiable information, card details, etc.). [Read more about custom attributes](/catalog-api/add-custom-attributes)
 * @export
 * @class CatalogCustomAttributeDefinition
 */
@ObjectType()
export class CatalogCustomAttributeDefinition {
    /**
     * The type of this custom attribute. Cannot be modified after creation. Required. See [CatalogCustomAttributeDefinitionType](#type-catalogcustomattributedefinitiontype) for possible values
     * @type {string}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: false })
    type: string;
    /**
     *  The name of this definition for API and seller-facing UI purposes. The name must be unique within the (merchant, application) pair. Required. May not be empty and may not exceed 255 characters. Can be modified after creation.
     * @type {string}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: false })
    name: string;
    /**
     * Seller-oriented description of the meaning of this Custom Attribute, any constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs.
     * @type {string}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: true })
    description?: string;
    /**
     * 
     * @type {SourceApplication}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field(() => SourceApplication, { nullable: true })
    source_application?: SourceApplication;
    /**
     * The set of Catalog Object Types that this Custom Attribute may be applied to. Currently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included. See [CatalogObjectType](#type-catalogobjecttype) for possible values
     * @type {Array<string>}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field(() => GraphQLJSON, { nullable: false })
    allowed_object_types: Array<string>;
    /**
     * The visibility of a custom attribute in seller-facing UIs (including Square Point of Sale applications and Square Dashboard). May be modified. See [CatalogCustomAttributeDefinitionSellerVisibility](#type-catalogcustomattributedefinitionsellervisibility) for possible values
     * @type {string}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: true })
    seller_visibility?: string;
    /**
     * The visibility of a custom attribute to applications other than the application that created the attribute. See [CatalogCustomAttributeDefinitionAppVisibility](#type-catalogcustomattributedefinitionappvisibility) for possible values
     * @type {string}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: true })
    app_visibility?: string;
    /**
     * 
     * @type {CatalogCustomAttributeDefinitionStringConfig}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field(() => CatalogCustomAttributeDefinitionStringConfig, { nullable: true })
    string_config?: CatalogCustomAttributeDefinitionStringConfig;
    /**
     * 
     * @type {CatalogCustomAttributeDefinitionNumberConfig}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field(() => CatalogCustomAttributeDefinitionNumberConfig, { nullable: true })
    number_config?: CatalogCustomAttributeDefinitionNumberConfig;
    /**
     * 
     * @type {CatalogCustomAttributeDefinitionSelectionConfig}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field(() => CatalogCustomAttributeDefinitionSelectionConfig, { nullable: true })
    selection_config?: CatalogCustomAttributeDefinitionSelectionConfig;
    /**
     * __Read-only.__ The number of custom attributes that reference this custom attribute definition. Set by the server in response to a ListCatalog request with `include_counts` set to `true`.  If the actual count is greater than 100, `custom_attribute_usage_count` will be set to `100`.
     * @type {number}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: true })
    custom_attribute_usage_count?: number;
    /**
     * The name of the desired custom attribute key that can be used to access the custom attribute value on catalog objects. Cannot be modified after the custom attribute definition has been created. Must be between 1 and 60 characters, and may only contain the characters `[a-zA-Z0-9_-]`.
     * @type {string}
     * @memberof CatalogCustomAttributeDefinition
     */
    
    @Field({ nullable: true })
    key?: string;
}


