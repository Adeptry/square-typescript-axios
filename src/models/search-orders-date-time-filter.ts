/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { TimeRange } from './time-range';

import { Field, ObjectType } from '@nestjs/graphql';

/**
 * Filter for `Order` objects based on whether their `CREATED_AT`, `CLOSED_AT` or `UPDATED_AT` timestamps fall within a specified time range. You can specify the time range and which timestamp to filter for. You can filter for only one time range at a time.  For each time range, the start time and end time are inclusive. If the end time is absent, it defaults to the time of the first request for the cursor.  __Important:__ If you use the DateTimeFilter in a SearchOrders query, you must also set the `sort_field` in [OrdersSort](#type-searchorderordersort) to the same field you filter for. For example, if you set the `CLOSED_AT` field in DateTimeFilter, you must also set the `sort_field` in SearchOrdersSort to `CLOSED_AT`. Otherwise, SearchOrders will throw an error. [Learn more about filtering orders by time range](/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range).
 * @export
 * @class SearchOrdersDateTimeFilter
 */
@ObjectType()
export class SearchOrdersDateTimeFilter {
    /**
     * 
     * @type {TimeRange}
     * @memberof SearchOrdersDateTimeFilter
     */
    @Field(() => TimeRange) 
    created_at?: TimeRange;
    /**
     * 
     * @type {TimeRange}
     * @memberof SearchOrdersDateTimeFilter
     */
    @Field(() => TimeRange) 
    updated_at?: TimeRange;
    /**
     * 
     * @type {TimeRange}
     * @memberof SearchOrdersDateTimeFilter
     */
    @Field(() => TimeRange) 
    closed_at?: TimeRange;
}


