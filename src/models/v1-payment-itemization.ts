/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { V1Money } from './v1-money';
import { V1PaymentDiscount } from './v1-payment-discount';
import { V1PaymentItemDetail } from './v1-payment-item-detail';
import { V1PaymentModifier } from './v1-payment-modifier';
import { V1PaymentTax } from './v1-payment-tax';

import { Field, ObjectType } from '@nestjs/graphql';

/**
 * Payment include an` itemizations` field that lists the items purchased, along with associated fees, modifiers, and discounts. Each itemization has an `itemization_type` field that indicates which of the following the itemization represents:  <ul> <li>An item variation from the merchant\'s item library</li> <li>A custom monetary amount</li> <li> An action performed on a Square gift card, such as activating or reloading it. </li> </ul>  *Note**: itemization information included in a `Payment` object reflects details collected **at the time of the payment**. Details such as the name or price of items might have changed since the payment was processed.
 * @export
 * @class V1PaymentItemization
 */
@ObjectType()
export class V1PaymentItemization {
    /**
     * The item\'s name.
     * @type {string}
     * @memberof V1PaymentItemization
     */
    @Field() 
    name?: string;
    /**
     * The quantity of the item purchased. This can be a decimal value.
     * @type {number}
     * @memberof V1PaymentItemization
     */
    @Field() 
    quantity?: number;
    /**
     * The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT See [V1PaymentItemizationItemizationType](#type-v1paymentitemizationitemizationtype) for possible values
     * @type {string}
     * @memberof V1PaymentItemization
     */
    @Field() 
    itemization_type?: string;
    /**
     * 
     * @type {V1PaymentItemDetail}
     * @memberof V1PaymentItemization
     */
    @Field(() => V1PaymentItemDetail) 
    item_detail?: V1PaymentItemDetail;
    /**
     * Notes entered by the merchant about the item at the time of payment, if any.
     * @type {string}
     * @memberof V1PaymentItemization
     */
    @Field() 
    notes?: string;
    /**
     * The name of the item variation purchased, if any.
     * @type {string}
     * @memberof V1PaymentItemization
     */
    @Field() 
    item_variation_name?: string;
    /**
     * 
     * @type {V1Money}
     * @memberof V1PaymentItemization
     */
    @Field(() => V1Money) 
    total_money?: V1Money;
    /**
     * 
     * @type {V1Money}
     * @memberof V1PaymentItemization
     */
    @Field(() => V1Money) 
    single_quantity_money?: V1Money;
    /**
     * 
     * @type {V1Money}
     * @memberof V1PaymentItemization
     */
    @Field(() => V1Money) 
    gross_sales_money?: V1Money;
    /**
     * 
     * @type {V1Money}
     * @memberof V1PaymentItemization
     */
    @Field(() => V1Money) 
    discount_money?: V1Money;
    /**
     * 
     * @type {V1Money}
     * @memberof V1PaymentItemization
     */
    @Field(() => V1Money) 
    net_sales_money?: V1Money;
    /**
     * All taxes applied to this itemization.
     * @type {Array<V1PaymentTax>}
     * @memberof V1PaymentItemization
     */
    @Field(() => [V1PaymentTax]) 
    taxes?: Array<V1PaymentTax>;
    /**
     * All discounts applied to this itemization.
     * @type {Array<V1PaymentDiscount>}
     * @memberof V1PaymentItemization
     */
    @Field(() => [V1PaymentDiscount]) 
    discounts?: Array<V1PaymentDiscount>;
    /**
     * All modifier options applied to this itemization.
     * @type {Array<V1PaymentModifier>}
     * @memberof V1PaymentItemization
     */
    @Field(() => [V1PaymentModifier]) 
    modifiers?: Array<V1PaymentModifier>;
}


