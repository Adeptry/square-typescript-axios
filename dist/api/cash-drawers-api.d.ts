/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { ListCashDrawerShiftEventsResponse } from '../models';
import { ListCashDrawerShiftsResponse } from '../models';
import { RetrieveCashDrawerShiftResponse } from '../models';
/**
 * CashDrawersApi - axios parameter creator
 * @export
 */
export declare const CashDrawersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Provides a paginated list of events for a single cash drawer shift.
     * @summary ListCashDrawerShiftEvents
     * @param {string} locationId The ID of the location to list cash drawer shifts for.
     * @param {string} shiftId The shift ID.
     * @param {number} [limit] Number of resources to be returned in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCashDrawerShiftEvents: (locationId: string, shiftId: string, limit?: number, cursor?: string, options?: any) => Promise<RequestArgs>;
    /**
     * Provides the details for all of the cash drawer shifts for a location in a date range.
     * @summary ListCashDrawerShifts
     * @param {string} locationId The ID of the location to query for a list of cash drawer shifts.
     * @param {string} [sortOrder] The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC
     * @param {string} [beginTime] The inclusive start time of the query on opened_at, in ISO 8601 format.
     * @param {string} [endTime] The exclusive end date of the query on opened_at, in ISO 8601 format.
     * @param {number} [limit] Number of cash drawer shift events in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCashDrawerShifts: (locationId: string, sortOrder?: string, beginTime?: string, endTime?: string, limit?: number, cursor?: string, options?: any) => Promise<RequestArgs>;
    /**
     * Provides the summary details for a single cash drawer shift. See RetrieveCashDrawerShiftEvents for a list of cash drawer shift events.
     * @summary RetrieveCashDrawerShift
     * @param {string} locationId The ID of the location to retrieve cash drawer shifts from.
     * @param {string} shiftId The shift ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveCashDrawerShift: (locationId: string, shiftId: string, options?: any) => Promise<RequestArgs>;
};
/**
 * CashDrawersApi - functional programming interface
 * @export
 */
export declare const CashDrawersApiFp: (configuration?: Configuration) => {
    /**
     * Provides a paginated list of events for a single cash drawer shift.
     * @summary ListCashDrawerShiftEvents
     * @param {string} locationId The ID of the location to list cash drawer shifts for.
     * @param {string} shiftId The shift ID.
     * @param {number} [limit] Number of resources to be returned in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCashDrawerShiftEvents(locationId: string, shiftId: string, limit?: number, cursor?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCashDrawerShiftEventsResponse>>;
    /**
     * Provides the details for all of the cash drawer shifts for a location in a date range.
     * @summary ListCashDrawerShifts
     * @param {string} locationId The ID of the location to query for a list of cash drawer shifts.
     * @param {string} [sortOrder] The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC
     * @param {string} [beginTime] The inclusive start time of the query on opened_at, in ISO 8601 format.
     * @param {string} [endTime] The exclusive end date of the query on opened_at, in ISO 8601 format.
     * @param {number} [limit] Number of cash drawer shift events in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCashDrawerShifts(locationId: string, sortOrder?: string, beginTime?: string, endTime?: string, limit?: number, cursor?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCashDrawerShiftsResponse>>;
    /**
     * Provides the summary details for a single cash drawer shift. See RetrieveCashDrawerShiftEvents for a list of cash drawer shift events.
     * @summary RetrieveCashDrawerShift
     * @param {string} locationId The ID of the location to retrieve cash drawer shifts from.
     * @param {string} shiftId The shift ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveCashDrawerShift(locationId: string, shiftId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RetrieveCashDrawerShiftResponse>>;
};
/**
 * CashDrawersApi - factory interface
 * @export
 */
export declare const CashDrawersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Provides a paginated list of events for a single cash drawer shift.
     * @summary ListCashDrawerShiftEvents
     * @param {string} locationId The ID of the location to list cash drawer shifts for.
     * @param {string} shiftId The shift ID.
     * @param {number} [limit] Number of resources to be returned in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCashDrawerShiftEvents(locationId: string, shiftId: string, limit?: number, cursor?: string, options?: any): AxiosPromise<ListCashDrawerShiftEventsResponse>;
    /**
     * Provides the details for all of the cash drawer shifts for a location in a date range.
     * @summary ListCashDrawerShifts
     * @param {string} locationId The ID of the location to query for a list of cash drawer shifts.
     * @param {string} [sortOrder] The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC
     * @param {string} [beginTime] The inclusive start time of the query on opened_at, in ISO 8601 format.
     * @param {string} [endTime] The exclusive end date of the query on opened_at, in ISO 8601 format.
     * @param {number} [limit] Number of cash drawer shift events in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCashDrawerShifts(locationId: string, sortOrder?: string, beginTime?: string, endTime?: string, limit?: number, cursor?: string, options?: any): AxiosPromise<ListCashDrawerShiftsResponse>;
    /**
     * Provides the summary details for a single cash drawer shift. See RetrieveCashDrawerShiftEvents for a list of cash drawer shift events.
     * @summary RetrieveCashDrawerShift
     * @param {string} locationId The ID of the location to retrieve cash drawer shifts from.
     * @param {string} shiftId The shift ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveCashDrawerShift(locationId: string, shiftId: string, options?: any): AxiosPromise<RetrieveCashDrawerShiftResponse>;
};
/**
 * CashDrawersApi - object-oriented interface
 * @export
 * @class CashDrawersApi
 * @extends {BaseAPI}
 */
export declare class CashDrawersApi extends BaseAPI {
    /**
     * Provides a paginated list of events for a single cash drawer shift.
     * @summary ListCashDrawerShiftEvents
     * @param {string} locationId The ID of the location to list cash drawer shifts for.
     * @param {string} shiftId The shift ID.
     * @param {number} [limit] Number of resources to be returned in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CashDrawersApi
     */
    listCashDrawerShiftEvents(locationId: string, shiftId: string, limit?: number, cursor?: string, options?: any): Promise<import("axios").AxiosResponse<ListCashDrawerShiftEventsResponse>>;
    /**
     * Provides the details for all of the cash drawer shifts for a location in a date range.
     * @summary ListCashDrawerShifts
     * @param {string} locationId The ID of the location to query for a list of cash drawer shifts.
     * @param {string} [sortOrder] The order in which cash drawer shifts are listed in the response, based on their opened_at field. Default value: ASC
     * @param {string} [beginTime] The inclusive start time of the query on opened_at, in ISO 8601 format.
     * @param {string} [endTime] The exclusive end date of the query on opened_at, in ISO 8601 format.
     * @param {number} [limit] Number of cash drawer shift events in a page of results (200 by default, 1000 max).
     * @param {string} [cursor] Opaque cursor for fetching the next page of results.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CashDrawersApi
     */
    listCashDrawerShifts(locationId: string, sortOrder?: string, beginTime?: string, endTime?: string, limit?: number, cursor?: string, options?: any): Promise<import("axios").AxiosResponse<ListCashDrawerShiftsResponse>>;
    /**
     * Provides the summary details for a single cash drawer shift. See RetrieveCashDrawerShiftEvents for a list of cash drawer shift events.
     * @summary RetrieveCashDrawerShift
     * @param {string} locationId The ID of the location to retrieve cash drawer shifts from.
     * @param {string} shiftId The shift ID.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CashDrawersApi
     */
    retrieveCashDrawerShift(locationId: string, shiftId: string, options?: any): Promise<import("axios").AxiosResponse<RetrieveCashDrawerShiftResponse>>;
}
