/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CreateCustomerGroupRequest } from '../models';
import { CreateCustomerGroupResponse } from '../models';
import { DeleteCustomerGroupResponse } from '../models';
import { ListCustomerGroupsResponse } from '../models';
import { RetrieveCustomerGroupResponse } from '../models';
import { UpdateCustomerGroupRequest } from '../models';
import { UpdateCustomerGroupResponse } from '../models';
/**
 * CustomerGroupsApi - axios parameter creator
 * @export
 */
export declare const CustomerGroupsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates a new customer group for a business.   The request must include the `name` value of the group.
     * @summary CreateCustomerGroup
     * @param {CreateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createCustomerGroup: (body: CreateCustomerGroupRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Deletes a customer group as identified by the `group_id` value.
     * @summary DeleteCustomerGroup
     * @param {string} groupId The ID of the customer group to delete.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCustomerGroup: (groupId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves the list of customer groups of a business.
     * @summary ListCustomerGroups
     * @param {string} [cursor] A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomerGroups: (cursor?: string, options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves a specific customer group as identified by the `group_id` value.
     * @summary RetrieveCustomerGroup
     * @param {string} groupId The ID of the customer group to retrieve.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveCustomerGroup: (groupId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Updates a customer group as identified by the `group_id` value.
     * @summary UpdateCustomerGroup
     * @param {string} groupId The ID of the customer group to update.
     * @param {UpdateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCustomerGroup: (groupId: string, body: UpdateCustomerGroupRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * CustomerGroupsApi - functional programming interface
 * @export
 */
export declare const CustomerGroupsApiFp: (configuration?: Configuration) => {
    /**
     * Creates a new customer group for a business.   The request must include the `name` value of the group.
     * @summary CreateCustomerGroup
     * @param {CreateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createCustomerGroup(body: CreateCustomerGroupRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateCustomerGroupResponse>>;
    /**
     * Deletes a customer group as identified by the `group_id` value.
     * @summary DeleteCustomerGroup
     * @param {string} groupId The ID of the customer group to delete.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCustomerGroup(groupId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteCustomerGroupResponse>>;
    /**
     * Retrieves the list of customer groups of a business.
     * @summary ListCustomerGroups
     * @param {string} [cursor] A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomerGroups(cursor?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCustomerGroupsResponse>>;
    /**
     * Retrieves a specific customer group as identified by the `group_id` value.
     * @summary RetrieveCustomerGroup
     * @param {string} groupId The ID of the customer group to retrieve.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveCustomerGroup(groupId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RetrieveCustomerGroupResponse>>;
    /**
     * Updates a customer group as identified by the `group_id` value.
     * @summary UpdateCustomerGroup
     * @param {string} groupId The ID of the customer group to update.
     * @param {UpdateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCustomerGroup(groupId: string, body: UpdateCustomerGroupRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateCustomerGroupResponse>>;
};
/**
 * CustomerGroupsApi - factory interface
 * @export
 */
export declare const CustomerGroupsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates a new customer group for a business.   The request must include the `name` value of the group.
     * @summary CreateCustomerGroup
     * @param {CreateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createCustomerGroup(body: CreateCustomerGroupRequest, options?: any): AxiosPromise<CreateCustomerGroupResponse>;
    /**
     * Deletes a customer group as identified by the `group_id` value.
     * @summary DeleteCustomerGroup
     * @param {string} groupId The ID of the customer group to delete.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteCustomerGroup(groupId: string, options?: any): AxiosPromise<DeleteCustomerGroupResponse>;
    /**
     * Retrieves the list of customer groups of a business.
     * @summary ListCustomerGroups
     * @param {string} [cursor] A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listCustomerGroups(cursor?: string, options?: any): AxiosPromise<ListCustomerGroupsResponse>;
    /**
     * Retrieves a specific customer group as identified by the `group_id` value.
     * @summary RetrieveCustomerGroup
     * @param {string} groupId The ID of the customer group to retrieve.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveCustomerGroup(groupId: string, options?: any): AxiosPromise<RetrieveCustomerGroupResponse>;
    /**
     * Updates a customer group as identified by the `group_id` value.
     * @summary UpdateCustomerGroup
     * @param {string} groupId The ID of the customer group to update.
     * @param {UpdateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateCustomerGroup(groupId: string, body: UpdateCustomerGroupRequest, options?: any): AxiosPromise<UpdateCustomerGroupResponse>;
};
/**
 * CustomerGroupsApi - object-oriented interface
 * @export
 * @class CustomerGroupsApi
 * @extends {BaseAPI}
 */
export declare class CustomerGroupsApi extends BaseAPI {
    /**
     * Creates a new customer group for a business.   The request must include the `name` value of the group.
     * @summary CreateCustomerGroup
     * @param {CreateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerGroupsApi
     */
    createCustomerGroup(body: CreateCustomerGroupRequest, options?: any): Promise<import("axios").AxiosResponse<CreateCustomerGroupResponse>>;
    /**
     * Deletes a customer group as identified by the `group_id` value.
     * @summary DeleteCustomerGroup
     * @param {string} groupId The ID of the customer group to delete.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerGroupsApi
     */
    deleteCustomerGroup(groupId: string, options?: any): Promise<import("axios").AxiosResponse<DeleteCustomerGroupResponse>>;
    /**
     * Retrieves the list of customer groups of a business.
     * @summary ListCustomerGroups
     * @param {string} [cursor] A pagination cursor returned by a previous call to this endpoint. Provide this to retrieve the next set of results for your original query.  See the [Pagination guide](https://developer.squareup.com/docs/working-with-apis/pagination) for more information.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerGroupsApi
     */
    listCustomerGroups(cursor?: string, options?: any): Promise<import("axios").AxiosResponse<ListCustomerGroupsResponse>>;
    /**
     * Retrieves a specific customer group as identified by the `group_id` value.
     * @summary RetrieveCustomerGroup
     * @param {string} groupId The ID of the customer group to retrieve.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerGroupsApi
     */
    retrieveCustomerGroup(groupId: string, options?: any): Promise<import("axios").AxiosResponse<RetrieveCustomerGroupResponse>>;
    /**
     * Updates a customer group as identified by the `group_id` value.
     * @summary UpdateCustomerGroup
     * @param {string} groupId The ID of the customer group to update.
     * @param {UpdateCustomerGroupRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CustomerGroupsApi
     */
    updateCustomerGroup(groupId: string, body: UpdateCustomerGroupRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateCustomerGroupResponse>>;
}
