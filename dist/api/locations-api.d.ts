/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { CreateLocationRequest } from '../models';
import { CreateLocationResponse } from '../models';
import { ListLocationsResponse } from '../models';
import { RetrieveLocationResponse } from '../models';
import { UpdateLocationRequest } from '../models';
import { UpdateLocationResponse } from '../models';
/**
 * LocationsApi - axios parameter creator
 * @export
 */
export declare const LocationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Creates a location.
     * @summary CreateLocation
     * @param {CreateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLocation: (body: CreateLocationRequest, options?: any) => Promise<RequestArgs>;
    /**
     * Provides information of all locations of a business.  Many Square API endpoints require a `location_id` parameter. The `id` field of the [`Location`](#type-location) objects returned by this endpoint correspond to that `location_id` parameter.
     * @summary ListLocations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLocations: (options?: any) => Promise<RequestArgs>;
    /**
     * Retrieves details of a location. You can specify \"main\"  as the location ID to retrieve details of the  main location.
     * @summary RetrieveLocation
     * @param {string} locationId The ID of the location to retrieve. If you specify the string \&quot;main\&quot;, then the endpoint returns the main location.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveLocation: (locationId: string, options?: any) => Promise<RequestArgs>;
    /**
     * Updates a location.
     * @summary UpdateLocation
     * @param {string} locationId The ID of the location to update.
     * @param {UpdateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLocation: (locationId: string, body: UpdateLocationRequest, options?: any) => Promise<RequestArgs>;
};
/**
 * LocationsApi - functional programming interface
 * @export
 */
export declare const LocationsApiFp: (configuration?: Configuration) => {
    /**
     * Creates a location.
     * @summary CreateLocation
     * @param {CreateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLocation(body: CreateLocationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateLocationResponse>>;
    /**
     * Provides information of all locations of a business.  Many Square API endpoints require a `location_id` parameter. The `id` field of the [`Location`](#type-location) objects returned by this endpoint correspond to that `location_id` parameter.
     * @summary ListLocations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLocations(options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListLocationsResponse>>;
    /**
     * Retrieves details of a location. You can specify \"main\"  as the location ID to retrieve details of the  main location.
     * @summary RetrieveLocation
     * @param {string} locationId The ID of the location to retrieve. If you specify the string \&quot;main\&quot;, then the endpoint returns the main location.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveLocation(locationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RetrieveLocationResponse>>;
    /**
     * Updates a location.
     * @summary UpdateLocation
     * @param {string} locationId The ID of the location to update.
     * @param {UpdateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLocation(locationId: string, body: UpdateLocationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateLocationResponse>>;
};
/**
 * LocationsApi - factory interface
 * @export
 */
export declare const LocationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Creates a location.
     * @summary CreateLocation
     * @param {CreateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createLocation(body: CreateLocationRequest, options?: any): AxiosPromise<CreateLocationResponse>;
    /**
     * Provides information of all locations of a business.  Many Square API endpoints require a `location_id` parameter. The `id` field of the [`Location`](#type-location) objects returned by this endpoint correspond to that `location_id` parameter.
     * @summary ListLocations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listLocations(options?: any): AxiosPromise<ListLocationsResponse>;
    /**
     * Retrieves details of a location. You can specify \"main\"  as the location ID to retrieve details of the  main location.
     * @summary RetrieveLocation
     * @param {string} locationId The ID of the location to retrieve. If you specify the string \&quot;main\&quot;, then the endpoint returns the main location.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    retrieveLocation(locationId: string, options?: any): AxiosPromise<RetrieveLocationResponse>;
    /**
     * Updates a location.
     * @summary UpdateLocation
     * @param {string} locationId The ID of the location to update.
     * @param {UpdateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateLocation(locationId: string, body: UpdateLocationRequest, options?: any): AxiosPromise<UpdateLocationResponse>;
};
/**
 * LocationsApi - object-oriented interface
 * @export
 * @class LocationsApi
 * @extends {BaseAPI}
 */
export declare class LocationsApi extends BaseAPI {
    /**
     * Creates a location.
     * @summary CreateLocation
     * @param {CreateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationsApi
     */
    createLocation(body: CreateLocationRequest, options?: any): Promise<import("axios").AxiosResponse<CreateLocationResponse>>;
    /**
     * Provides information of all locations of a business.  Many Square API endpoints require a `location_id` parameter. The `id` field of the [`Location`](#type-location) objects returned by this endpoint correspond to that `location_id` parameter.
     * @summary ListLocations
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationsApi
     */
    listLocations(options?: any): Promise<import("axios").AxiosResponse<ListLocationsResponse>>;
    /**
     * Retrieves details of a location. You can specify \"main\"  as the location ID to retrieve details of the  main location.
     * @summary RetrieveLocation
     * @param {string} locationId The ID of the location to retrieve. If you specify the string \&quot;main\&quot;, then the endpoint returns the main location.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationsApi
     */
    retrieveLocation(locationId: string, options?: any): Promise<import("axios").AxiosResponse<RetrieveLocationResponse>>;
    /**
     * Updates a location.
     * @summary UpdateLocation
     * @param {string} locationId The ID of the location to update.
     * @param {UpdateLocationRequest} body An object containing the fields to POST for the request.  See the corresponding object definition for field details.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LocationsApi
     */
    updateLocation(locationId: string, body: UpdateLocationRequest, options?: any): Promise<import("axios").AxiosResponse<UpdateLocationResponse>>;
}
