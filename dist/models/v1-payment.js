"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.V1Payment = void 0;
var device_1 = require("./device");
var v1_money_1 = require("./v1-money");
var v1_payment_itemization_1 = require("./v1-payment-itemization");
var v1_payment_surcharge_1 = require("./v1-payment-surcharge");
var v1_payment_tax_1 = require("./v1-payment-tax");
var v1_refund_1 = require("./v1-refund");
var v1_tender_1 = require("./v1-tender");
var graphql_1 = require("@nestjs/graphql");
/**
 * A payment represents a paid transaction between a Square merchant and a customer. Payment details are usually available from Connect API endpoints within a few minutes after the transaction completes.  Each Payment object includes several fields that end in `_money`. These fields describe the various amounts of money that contribute to the payment total:  <ul> <li> Monetary values are <b>positive</b> if they represent an <em>increase</em> in the amount of money the merchant receives (e.g., <code>tax_money</code>, <code>tip_money</code>). </li> <li> Monetary values are <b>negative</b> if they represent an <em>decrease</em> in the amount of money the merchant receives (e.g., <code>discount_money</code>, <code>refunded_money</code>). </li> </ul>
 * @export
 * @class V1Payment
 */
var V1Payment = /** @class */ (function () {
    function V1Payment() {
    }
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", String)
    ], V1Payment.prototype, "id", void 0);
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", String)
    ], V1Payment.prototype, "merchant_id", void 0);
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", String)
    ], V1Payment.prototype, "created_at", void 0);
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", String)
    ], V1Payment.prototype, "creator_id", void 0);
    __decorate([
        graphql_1.Field(function () { return device_1.Device; }),
        __metadata("design:type", device_1.Device)
    ], V1Payment.prototype, "device", void 0);
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", String)
    ], V1Payment.prototype, "payment_url", void 0);
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", String)
    ], V1Payment.prototype, "receipt_url", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "inclusive_tax_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "additive_tax_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "tax_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "tip_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "discount_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "total_collected_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "processing_fee_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "net_total_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "refunded_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "swedish_rounding_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "gross_sales_money", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "net_sales_money", void 0);
    __decorate([
        graphql_1.Field(function () { return [v1_payment_tax_1.V1PaymentTax]; }),
        __metadata("design:type", Array)
    ], V1Payment.prototype, "inclusive_tax", void 0);
    __decorate([
        graphql_1.Field(function () { return [v1_payment_tax_1.V1PaymentTax]; }),
        __metadata("design:type", Array)
    ], V1Payment.prototype, "additive_tax", void 0);
    __decorate([
        graphql_1.Field(function () { return [v1_tender_1.V1Tender]; }),
        __metadata("design:type", Array)
    ], V1Payment.prototype, "tender", void 0);
    __decorate([
        graphql_1.Field(function () { return [v1_refund_1.V1Refund]; }),
        __metadata("design:type", Array)
    ], V1Payment.prototype, "refunds", void 0);
    __decorate([
        graphql_1.Field(function () { return [v1_payment_itemization_1.V1PaymentItemization]; }),
        __metadata("design:type", Array)
    ], V1Payment.prototype, "itemizations", void 0);
    __decorate([
        graphql_1.Field(function () { return v1_money_1.V1Money; }),
        __metadata("design:type", v1_money_1.V1Money)
    ], V1Payment.prototype, "surcharge_money", void 0);
    __decorate([
        graphql_1.Field(function () { return [v1_payment_surcharge_1.V1PaymentSurcharge]; }),
        __metadata("design:type", Array)
    ], V1Payment.prototype, "surcharges", void 0);
    __decorate([
        graphql_1.Field(),
        __metadata("design:type", Boolean)
    ], V1Payment.prototype, "is_partial", void 0);
    V1Payment = __decorate([
        graphql_1.ObjectType()
    ], V1Payment);
    return V1Payment;
}());
exports.V1Payment = V1Payment;
