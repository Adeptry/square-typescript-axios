/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Money } from './money';
import { OrderLineItemAppliedDiscount } from './order-line-item-applied-discount';
import { OrderLineItemAppliedTax } from './order-line-item-applied-tax';
import { OrderLineItemModifier } from './order-line-item-modifier';
import { OrderQuantityUnit } from './order-quantity-unit';
/**
 * Represents a line item in an order. Each line item describes a different product to purchase, with its own quantity and price details.
 * @export
 * @interface OrderLineItem
 */
export interface OrderLineItem {
    /**
     * Unique ID that identifies the line item only within this order.
     * @type {string}
     * @memberof OrderLineItem
     */
    uid?: string;
    /**
     * The name of the line item.
     * @type {string}
     * @memberof OrderLineItem
     */
    name?: string;
    /**
     * The quantity purchased, formatted as a decimal number. For example: `\"3\"`.  Line items with a quantity of `\"0\"` will be automatically removed upon paying for or otherwise completing the order.  Line items with a `quantity_unit` can have non-integer quantities. For example: `\"1.70000\"`.
     * @type {string}
     * @memberof OrderLineItem
     */
    quantity: string;
    /**
     *
     * @type {OrderQuantityUnit}
     * @memberof OrderLineItem
     */
    quantity_unit?: OrderQuantityUnit;
    /**
     * The note of the line item.
     * @type {string}
     * @memberof OrderLineItem
     */
    note?: string;
    /**
     * The `CatalogItemVariation` id applied to this line item.
     * @type {string}
     * @memberof OrderLineItem
     */
    catalog_object_id?: string;
    /**
     * The name of the variation applied to this line item.
     * @type {string}
     * @memberof OrderLineItem
     */
    variation_name?: string;
    /**
     * Application-defined data attached to this line item. Metadata fields are intended to store descriptive references or associations with an entity in another system or store brief information about the object. Square does not process this field; it only stores and returns it in relevant API calls. Do not use metadata to store any sensitive information (personally identifiable information, card details, etc.).  Keys written by applications must be 60 characters or less and must be in the character set `[a-zA-Z0-9_-]`. Entries may also include metadata generated by Square. These keys are prefixed with a namespace, separated from the key with a \':\' character.  Values have a max length of 255 characters.  An application may have up to 10 entries per metadata field.  Entries written by applications are private and can only be read or modified by the same application.  See [Metadata](https://developer.squareup.com/docs/build-basics/metadata) for more information.
     * @type {{ [key: string]: string; }}
     * @memberof OrderLineItem
     */
    metadata?: {
        [key: string]: string;
    };
    /**
     * The `CatalogModifier`s applied to this line item.
     * @type {Array<OrderLineItemModifier>}
     * @memberof OrderLineItem
     */
    modifiers?: Array<OrderLineItemModifier>;
    /**
     * The list of references to taxes applied to this line item. Each `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level `OrderLineItemTax` applied to the line item. On reads, the amount applied is populated.  An `OrderLineItemAppliedTax` will be automatically created on every line item for all `ORDER` scoped taxes added to the order. `OrderLineItemAppliedTax` records for `LINE_ITEM` scoped taxes must be added in requests for the tax to apply to any line items.  To change the amount of a tax, modify the referenced top-level tax.
     * @type {Array<OrderLineItemAppliedTax>}
     * @memberof OrderLineItem
     */
    applied_taxes?: Array<OrderLineItemAppliedTax>;
    /**
     * The list of references to discounts applied to this line item. Each `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level `OrderLineItemDiscounts` applied to the line item. On reads, the amount applied is populated.  An `OrderLineItemAppliedDiscount` will be automatically created on every line item for all `ORDER` scoped discounts that are added to the order. `OrderLineItemAppliedDiscount` records for `LINE_ITEM` scoped discounts must be added in requests for the discount to apply to any line items.  To change the amount of a discount, modify the referenced top-level discount.
     * @type {Array<OrderLineItemAppliedDiscount>}
     * @memberof OrderLineItem
     */
    applied_discounts?: Array<OrderLineItemAppliedDiscount>;
    /**
     *
     * @type {Money}
     * @memberof OrderLineItem
     */
    base_price_money?: Money;
    /**
     *
     * @type {Money}
     * @memberof OrderLineItem
     */
    variation_total_price_money?: Money;
    /**
     *
     * @type {Money}
     * @memberof OrderLineItem
     */
    gross_sales_money?: Money;
    /**
     *
     * @type {Money}
     * @memberof OrderLineItem
     */
    total_tax_money?: Money;
    /**
     *
     * @type {Money}
     * @memberof OrderLineItem
     */
    total_discount_money?: Money;
    /**
     *
     * @type {Money}
     * @memberof OrderLineItem
     */
    total_money?: Money;
}
