"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoicePaymentRequest = void 0;
var invoice_payment_reminder_1 = require("./invoice-payment-reminder");
var money_1 = require("./money");
var graphql_1 = require("@nestjs/graphql");
/**
 * Describes a specific payment request in an invoice. Invoices that contain multiple payment requests can  specify a maximum of 12 `INSTALLMENT` request types. All of the payment requests must specify the same `request_method`.  For more information,  see [Payment requests](/docs/invoices-api/overview#payment-requests).
 * @export
 * @class InvoicePaymentRequest
 */
var InvoicePaymentRequest = /** @class */ (function () {
    function InvoicePaymentRequest() {
    }
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "uid", void 0);
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "request_method", void 0);
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "request_type", void 0);
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "due_date", void 0);
    __decorate([
        graphql_1.Field(function () { return money_1.Money; }, { nullable: true }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "fixed_amount_requested_money", void 0);
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "percentage_requested", void 0);
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", Boolean)
    ], InvoicePaymentRequest.prototype, "tipping_enabled", void 0);
    __decorate([
        graphql_1.Field({ nullable: true }),
        __metadata("design:type", String)
    ], InvoicePaymentRequest.prototype, "card_id", void 0);
    __decorate([
        graphql_1.Field(function () { return [invoice_payment_reminder_1.InvoicePaymentReminder]; }, { nullable: true }),
        __metadata("design:type", Array)
    ], InvoicePaymentRequest.prototype, "reminders", void 0);
    __decorate([
        graphql_1.Field(function () { return money_1.Money; }, { nullable: true }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "computed_amount_money", void 0);
    __decorate([
        graphql_1.Field(function () { return money_1.Money; }, { nullable: true }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "total_completed_amount_money", void 0);
    __decorate([
        graphql_1.Field(function () { return money_1.Money; }, { nullable: true }),
        __metadata("design:type", money_1.Money)
    ], InvoicePaymentRequest.prototype, "rounding_adjustment_included_money", void 0);
    InvoicePaymentRequest = __decorate([
        graphql_1.ObjectType()
    ], InvoicePaymentRequest);
    return InvoicePaymentRequest;
}());
exports.InvoicePaymentRequest = InvoicePaymentRequest;
