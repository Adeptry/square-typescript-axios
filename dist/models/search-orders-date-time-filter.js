"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Square Connect API
 * Client library for accessing the Square Connect APIs
 *
 * The version of the OpenAPI document: 2.0
 * Contact: developers@squareup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchOrdersDateTimeFilter = void 0;
var time_range_1 = require("./time-range");
var graphql_1 = require("@nestjs/graphql");
/**
 * Filter for `Order` objects based on whether their `CREATED_AT`, `CLOSED_AT` or `UPDATED_AT` timestamps fall within a specified time range. You can specify the time range and which timestamp to filter for. You can filter for only one time range at a time.  For each time range, the start time and end time are inclusive. If the end time is absent, it defaults to the time of the first request for the cursor.  __Important:__ If you use the DateTimeFilter in a SearchOrders query, you must also set the `sort_field` in [OrdersSort](#type-searchorderordersort) to the same field you filter for. For example, if you set the `CLOSED_AT` field in DateTimeFilter, you must also set the `sort_field` in SearchOrdersSort to `CLOSED_AT`. Otherwise, SearchOrders will throw an error. [Learn more about filtering orders by time range](/orders-api/manage-orders#important-note-on-filtering-orders-by-time-range).
 * @export
 * @class SearchOrdersDateTimeFilter
 */
var SearchOrdersDateTimeFilter = /** @class */ (function () {
    function SearchOrdersDateTimeFilter() {
    }
    __decorate([
        graphql_1.Field(function () { return time_range_1.TimeRange; }, { nullable: true }),
        __metadata("design:type", time_range_1.TimeRange)
    ], SearchOrdersDateTimeFilter.prototype, "created_at", void 0);
    __decorate([
        graphql_1.Field(function () { return time_range_1.TimeRange; }, { nullable: true }),
        __metadata("design:type", time_range_1.TimeRange)
    ], SearchOrdersDateTimeFilter.prototype, "updated_at", void 0);
    __decorate([
        graphql_1.Field(function () { return time_range_1.TimeRange; }, { nullable: true }),
        __metadata("design:type", time_range_1.TimeRange)
    ], SearchOrdersDateTimeFilter.prototype, "closed_at", void 0);
    SearchOrdersDateTimeFilter = __decorate([
        graphql_1.ObjectType()
    ], SearchOrdersDateTimeFilter);
    return SearchOrdersDateTimeFilter;
}());
exports.SearchOrdersDateTimeFilter = SearchOrdersDateTimeFilter;
